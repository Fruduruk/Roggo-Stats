# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ballchasing_pb2 as ballchasing__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class BallchasingStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSimpleReplays = channel.unary_unary(
                '/ballchasing.Ballchasing/GetSimpleReplays',
                request_serializer=ballchasing__pb2.FilterRequest.SerializeToString,
                response_deserializer=ballchasing__pb2.SimpleReplaysResponse.FromString,
                )
        self.GetAdvancedReplayById = channel.unary_unary(
                '/ballchasing.Ballchasing/GetAdvancedReplayById',
                request_serializer=ballchasing__pb2.IdRequest.SerializeToString,
                response_deserializer=ballchasing__pb2.AdvancedReplay.FromString,
                )
        self.GetAdvancedReplays = channel.unary_unary(
                '/ballchasing.Ballchasing/GetAdvancedReplays',
                request_serializer=ballchasing__pb2.FilterRequest.SerializeToString,
                response_deserializer=ballchasing__pb2.AdvancedReplaysResponse.FromString,
                )
        self.StartBackgroundDownload = channel.unary_unary(
                '/ballchasing.Ballchasing/StartBackgroundDownload',
                request_serializer=ballchasing__pb2.BackgroundDownloadRequest.SerializeToString,
                response_deserializer=ballchasing__pb2.BasicResponse.FromString,
                )
        self.CancelBackgroundDownload = channel.unary_unary(
                '/ballchasing.Ballchasing/CancelBackgroundDownload',
                request_serializer=ballchasing__pb2.Identity.SerializeToString,
                response_deserializer=ballchasing__pb2.BasicResponse.FromString,
                )
        self.GetBackgroundDownloadOperations = channel.unary_unary(
                '/ballchasing.Ballchasing/GetBackgroundDownloadOperations',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=ballchasing__pb2.BackgroundDownloadResponse.FromString,
                )


class BallchasingServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetSimpleReplays(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAdvancedReplayById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAdvancedReplays(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartBackgroundDownload(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelBackgroundDownload(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBackgroundDownloadOperations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BallchasingServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSimpleReplays': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSimpleReplays,
                    request_deserializer=ballchasing__pb2.FilterRequest.FromString,
                    response_serializer=ballchasing__pb2.SimpleReplaysResponse.SerializeToString,
            ),
            'GetAdvancedReplayById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAdvancedReplayById,
                    request_deserializer=ballchasing__pb2.IdRequest.FromString,
                    response_serializer=ballchasing__pb2.AdvancedReplay.SerializeToString,
            ),
            'GetAdvancedReplays': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAdvancedReplays,
                    request_deserializer=ballchasing__pb2.FilterRequest.FromString,
                    response_serializer=ballchasing__pb2.AdvancedReplaysResponse.SerializeToString,
            ),
            'StartBackgroundDownload': grpc.unary_unary_rpc_method_handler(
                    servicer.StartBackgroundDownload,
                    request_deserializer=ballchasing__pb2.BackgroundDownloadRequest.FromString,
                    response_serializer=ballchasing__pb2.BasicResponse.SerializeToString,
            ),
            'CancelBackgroundDownload': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelBackgroundDownload,
                    request_deserializer=ballchasing__pb2.Identity.FromString,
                    response_serializer=ballchasing__pb2.BasicResponse.SerializeToString,
            ),
            'GetBackgroundDownloadOperations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBackgroundDownloadOperations,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=ballchasing__pb2.BackgroundDownloadResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ballchasing.Ballchasing', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Ballchasing(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSimpleReplays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ballchasing.Ballchasing/GetSimpleReplays',
            ballchasing__pb2.FilterRequest.SerializeToString,
            ballchasing__pb2.SimpleReplaysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAdvancedReplayById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ballchasing.Ballchasing/GetAdvancedReplayById',
            ballchasing__pb2.IdRequest.SerializeToString,
            ballchasing__pb2.AdvancedReplay.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAdvancedReplays(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ballchasing.Ballchasing/GetAdvancedReplays',
            ballchasing__pb2.FilterRequest.SerializeToString,
            ballchasing__pb2.AdvancedReplaysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartBackgroundDownload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ballchasing.Ballchasing/StartBackgroundDownload',
            ballchasing__pb2.BackgroundDownloadRequest.SerializeToString,
            ballchasing__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelBackgroundDownload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ballchasing.Ballchasing/CancelBackgroundDownload',
            ballchasing__pb2.Identity.SerializeToString,
            ballchasing__pb2.BasicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBackgroundDownloadOperations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ballchasing.Ballchasing/GetBackgroundDownloadOperations',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ballchasing__pb2.BackgroundDownloadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
