syntax = "proto3";

option csharp_namespace = "BallchasingWrapper.Grpc";

package ballchasing;

service Ballchasing {
  rpc GetSimpleReplays (RequestFilter) returns (SimpleReplaysResponse);
}

message RequestFilter {
  optional int32 replayCap = 1;
  optional string filterName = 2;
  repeated Identity identities = 3;
  optional string title = 4;
  Playlist playlist = 5;
  MatchType matchType = 6;
  optional Season season = 7;
  optional string minDate = 8;
  optional string maxDate = 9;
}

message Identity {
  IdentityType type = 1;
  string nameOrId = 2;
}

enum IdentityType{
  NAME = 0;
  STEAM_ID = 1;
  EPIC_ID = 2;
}

message Season {
  int32 number = 1;
  bool freeToPlay = 2;
}

enum MatchType {
  BOTH = 0;
  RANKED = 1;
  UNRANKED = 2;
}

enum Playlist {
  ALL = 0;
  DUELS = 1;
  DOUBLES = 2;
  STANDARD = 3;
  CHAOS = 4;
  PRIVATE_GAME = 5;
  OFFLINE = 6;
  SNOW_DAY = 7;
  ROCKET_LABS = 8;
  HOOPS = 9;
  RUMBLE = 10;
  TOURNAMENT = 11;
  DROP_SHOT = 12;
  DROP_SHOT_RUMBLE = 13;
  HEAT_SEEKER = 14;
}

message SimpleReplaysResponse {
  repeated Replay replays = 1;
}

message Replay {
  string id = 1;
  string title = 2;
  string mapName = 3;
  Playlist playlist = 4;
  MatchType matchType = 5;
  int32 duration = 6;
  bool overtime = 7;
  string date = 8;
  Team blue = 11;
  Team orange = 12;
  optional Rank minRank = 9;
  optional Rank maxRank = 10;
}

message Rank {
  string id = 1;
  int32 tier = 2;
  int32 division = 3;
  string name = 4;
}

message Team {
  int32 goals = 1;
  repeated Player players = 2;
}

message Player {
  double startTime = 1;
  double endTime = 2;
  string name = 3;
  optional PlayerId id = 4;
  bool mvp = 5;
  optional Rank rank = 6;
  int32 score = 7;
}

message PlayerId {
  string platform = 1;
  string id = 2;
}